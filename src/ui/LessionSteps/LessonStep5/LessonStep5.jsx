import { useState, useEffect } from "react";
import { 
  getTodos, subscribe, addTodo, removeTodo, 
  startAutoStream, stopAutoStream 
} from "./fakeTodosStream";

export const LessonStep5 = () => (
  <div>
    <h2>5. –ü—Ä–∞–∫—Ç–∏–∫–∞: –ø–æ–¥–∫–ª—é—á–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫ —á–µ—Ä–µ–∑ useSyncExternalStore</h2>

    <p>
      –ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –º–æ–¥—É–ª—å <code>fakeTodosStream.js</code>. 
      –≠—Ç–æ <b>–Ω–µ –Ω–∞—Å—Ç–æ—è—â–∏–π WebSocket</b>, –∞ —É—á–µ–±–Ω–∞—è –∏–º–∏—Ç–∞—Ü–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ
      –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö: –∑–∞–¥–∞—á–∏ –≤ –Ω—ë–º –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏ –∏ –º–æ–≥—É—Ç 
      –ø–æ—Å—Ç—É–ø–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ—Ç–æ–∫–∞. –¢–∞–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ä–∞–±–æ—Ç—É 
      –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å—Ç–æ—Ä–∞ –∏–ª–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å—Ç—Ä–∏–º–∞ —Å–æ–±—ã—Ç–∏–π.
    </p>

    <h3>üìÑ –ö–æ–¥ –º–æ–¥—É–ª—è fakeTodosStream.js</h3>
    <p>
      –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –Ω–æ–≤—ã–π —Ñ–∞–π–ª <code>src/fakeTodosStream.js</code> –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:
    </p>

    <pre style={codeStyle}>{`// fakeTodosStream.js ‚Äî –∏–º–∏—Ç–∞—Ü–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
let todos = [{ id: 1, text: "–ü–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞" }];
let listeners = [];
let intervalId = null;

function notify() {
  listeners.forEach((l) => l());
}

export function addTodo(text) {
  setTimeout(() => {
    todos = [...todos, { id: Date.now(), text }];
    notify();
  }, Math.random() * 1000 + 300);
}

export function removeTodo(id) {
  setTimeout(() => {
    todos = todos.filter((t) => t.id !== id);
    notify();
  }, Math.random() * 1000 + 300);
}

export function getTodos() {
  return todos;
}

export function subscribe(listener) {
  listeners.push(listener);
  return () => {
    listeners = listeners.filter((l) => l !== listener);
  };
}

// —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º "—Å—Ç—Ä–∏–º–æ–º"
export function startAutoStream() {
  if (intervalId) return;
  intervalId = setInterval(() => {
    todos = [...todos, { id: Date.now(), text: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞" }];
    notify();
  }, 3000);
}

export function stopAutoStream() {
  if (intervalId) {
    clearInterval(intervalId);
    intervalId = null;
  }
}
`}</pre>

    <h3>‚ùå –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–±–ª–µ–º—ã</h3>
    <p>
      –ù–∏–∂–µ –ø—Ä–∏–º–µ—Ä <b>BrokenTodos</b>, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç–æ—Ä —á–µ—Ä–µ–∑{" "}
      <code>useEffect</code>. –ò–∑-–∑–∞ –∑–∞–¥–µ—Ä–∂–µ–∫ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –¥–∞–Ω–Ω—ã–µ –≤
      —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –º–æ–≥—É—Ç –±—ã—Ç—å <b>–Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–º–∏</b>.
    </p>

    <BrokenTodos />

    <h3>üìù –ó–∞–¥–∞–Ω–∏–µ</h3>
    <p>
      –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã <code>TodoList</code> –∏ <code>TodoCounter</code>,
      –∫–æ—Ç–æ—Ä—ã–µ —á–∏—Ç–∞—é—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ <code>fakeTodosStream.js</code>{" "}
      <b>—Å –ø–æ–º–æ—â—å—é useSyncExternalStore</b>.
    </p>

    <ul>
      <li>
        <code>TodoList</code> ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Ö —É–¥–∞–ª—è—Ç—å.
      </li>
      <li>
        <code>TodoCounter</code> ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á.
      </li>
      <li>
        –û–±–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è <b>—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ</b>, –¥–∞–∂–µ –µ—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        –ø—Ä–∏—Ö–æ–¥—è—Ç —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –∏–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
      </li>
    </ul>

    <p>
      –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ <code>useEffect</code> –∏ —É–±–µ–¥–∏—Ç–µ—Å—å,
      —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Ä–∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è. –ó–∞—Ç–µ–º –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥, –ø–æ–¥–∫–ª—é—á–∏–≤{" "}
      <code>useSyncExternalStore</code>.
    </p>
  </div>
);

// ---- ‚ùå broken demo ----
function BrokenTodos() {
  const [todos, setTodos] = useState(getTodos());
  const [count, setCount] = useState(getTodos().length);

  useEffect(() => {
    const unsub = subscribe(() => {
      // —Å–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ä–∞–∑—É
      setTodos(getTodos());
      // –∏–º–∏—Ç–∏—Ä—É–µ–º "–∑–∞–ø–∞–∑–¥—ã–≤–∞—é—â–∏–π" –ø–æ–¥—Å—á—ë—Ç
      setTimeout(() => setCount(getTodos().length), 500);
    });
    return unsub;
  }, []);

  return (
    <div style={demoBox}>
      <p><b>BrokenTodos</b></p>
      <button onClick={() => addTodo("–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞")}>–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É</button>
      <button onClick={() => removeTodo(todos[0]?.id)}>–£–¥–∞–ª–∏—Ç—å –ø–µ—Ä–≤—É—é</button>
      <button onClick={startAutoStream}>‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ—Ç–æ–∫</button>
      <button onClick={stopAutoStream}>‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Ç–æ–∫</button>
      <ul>
        {todos.map((t) => (
          <li key={t.id}>{t.text}</li>
        ))}
      </ul>
      <p>
        –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á: {todos.length} <br />‚ùå –°—á—ë—Ç—á–∏–∫ (–º–æ–∂–µ—Ç –æ—Ç—Å—Ç–∞–≤–∞—Ç—å): {count}
      </p>
    </div>
  );
}

// ---- —Å—Ç–∏–ª–∏ ----
const demoBox = {
  background: "#f9f9f9",
  border: "1px solid #ddd",
  padding: "12px",
  borderRadius: "6px",
  maxWidth: "420px",
  marginTop: "12px",
};

const codeStyle = {
  background: "#f5f5f5",
  padding: "12px",
  borderRadius: "6px",
  overflowX: "auto",
  fontSize: "14px",
  lineHeight: "1.4",
  margin: "8px 0",
};
